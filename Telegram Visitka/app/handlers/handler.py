from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
import aiogram.utils.markdown as fmt
import random
import configparser
from configparser import ConfigParser

from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, ParseMode


CHAT_ID = -1001761279032
LOGO_FILE_ID = 'AgACAgIAAxkBAAOAY11bBKpUPV5qfl46x52OdbFVMWIAAuLHMRuOS_FKip-nQjfj0NABAAMCAANzAAMqBA'

class OrderState(StatesGroup):
   pass
switch_back = types.InlineKeyboardMarkup()
switch_back.add(types.InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data='menuback'
    ))

async def menu(message: types.Message, state: FSMContext):
    await message.bot.send_photo(message.chat.id,LOGO_FILE_ID,reply_markup=types.ReplyKeyboardRemove())

    switch_keyboard = types.InlineKeyboardMarkup()
    switch_keyboard.add(types.InlineKeyboardButton(
        text="–ü—Ä–∞–π—Å –Ω–∞ –º–æ–∏ —É—Å–ª—É–≥–∏üí≤",
        callback_data='menu1',
        request_contact=True
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text='–ö–∞–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–∫–∞–∑üí∞',
        callback_data='menu2'
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text='–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µüõ°',
        callback_data='menu3'
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text='–ü—Ä–∏–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–æ–≤üßæ',
        callback_data='menu4'
    ))

    switch_keyboard.add(types.InlineKeyboardButton(
        text='–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µüìå',
        callback_data='menu7'
    ))

    switch_keyboard.add(types.InlineKeyboardButton(
            text='–ö–æ–Ω—Ç–∞–∫—Ç—ã‚òéÔ∏è',
            callback_data='menu5'
        ))

    switch_keyboard.add(types.InlineKeyboardButton(
            text='–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫‚òéÔ∏è',
            callback_data='menu6'
        ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text='–í—ã–∫—É–ø –Ω–µ—Ä–∞–±–æ—á–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—èüí∞',
        callback_data='111'
    ))
    await message.answer(
        text='<b>–ù–∞—à –∫–∞–Ω–∞–ª: t.me/createbizbotchannel \n–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏. </b>',
        reply_markup=switch_keyboard, parse_mode='HTML')




async def menu1(cb: types.CallbackQuery,state: FSMContext):
    text = fmt.text(
            fmt.text(fmt.hunderline("–Ø–±–ª–æ–∫–∏"), ", –≤–µ—Å 1 –∫–≥."),
            fmt.text("–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞:", fmt.hstrikethrough(50), "—Ä—É–±–ª–µ–π"),
            fmt.text("–ù–æ–≤–∞—è —Ü–µ–Ω–∞:", fmt.hbold(25), "—Ä—É–±–ª–µ–π"),
            fmt.text(fmt.hspoiler('test')),
            sep="\n",
        )
    print(fmt.hspoiler('213'))
    oldText = f"""–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é –±–æ—Ç–æ–≤ –ø–æ–¥ –∑–∞–∫–∞–∑
ü§ñ–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç-–≤–∏–∑–∏—Ç–∫–∞:
    üìä–ì–¥–µ –µ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏
    üí≤–¶–µ–Ω—ã
    üìú–£—Å–ª—É–≥–∏
    ‚ùóÔ∏è–ê–∫—Ü–∏–∏
    ‚òéÔ∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã
    üó∫–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    üì≤–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç.
–¶–µ–Ω–∞: –æ—Ç {fmt.hspoiler('3990')}—Ä—É–±.


ü§ñ–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–∞ –ø–æ–¥ –≤–∞—à –∑–∞–∫–∞–∑:
    –ü—Ä–∏–º–µ—Ä—ã: –û–ø—Ä–æ—Å–Ω–∏–∫, –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ü–µ–Ω—ã, –º–∏–Ω–∏-–∏–≥—Ä–∞.
–¶–µ–Ω–∞: –æ—Ç {fmt.hspoiler('15000')}—Ä—É–±.
    
    """
    await cb.message.answer(text=oldText, reply_markup=switch_back,parse_mode="HTML" )

async def menu2(cb: types.CallbackQuery,state: FSMContext):
    switch = types.InlineKeyboardMarkup()
    switch.add(types.InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data='menuback'
    ))

    switch.add(types.InlineKeyboardButton(
        text='–ö–æ–Ω—Ç–∞–∫—Ç—ã‚òéÔ∏è',
        callback_data='menu5'
    ))

    switch.add(types.InlineKeyboardButton(
        text='–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫‚òéÔ∏è',
        callback_data='menu6'
    ))

    await cb.message.answer(text="""üìã–≠—Ç–∞–ø—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:
    
    ‚òëÔ∏è–õ–∏—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –º–∏–Ω—É—Ç 20, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ —É –º–µ–Ω—è –ø–æ—è–≤–ª—è–µ—Ç—Å—è –ø–æ–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é –±–æ—Ç–∞.
    ‚òëÔ∏è–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.
    ‚òëÔ∏è–ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞.
    ‚òëÔ∏è–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–∞–≤–æ–∫.
    ‚òëÔ∏è–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –±–æ—Ç–∞ –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ–≥–æ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥ 24/7.
    ‚òëÔ∏è–û–ø–ª–∞—Ç–∞ —Å–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
    
 ‚è≥–ü–æ –≤—Ä–µ–º–µ–Ω–∏:
    ü§ñ–ë–æ—Ç-–≤–∏–∑–∏—Ç–∫–∞:
        –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –¥–æ 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π. –ë–µ–∑ —É—á—ë—Ç–∞ –ø—Ä–∞–≤–æ–∫ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –≤–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã
    ü§ñ–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–∞:
        –û—Ç 5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏, –≤ —Ç–µ—Ö –∑–∞–¥–∞–Ω–∏–∏ –±—É–¥–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

üìû–ü–æ–∑–≤–æ–Ω–∏—Ç–µ, –∞ –æ—Å—Ç–∞–ª—å–Ω–æ–µ ‚Äì —è —Å–¥–µ–ª–∞—é —Å–∞–º!
    """, reply_markup=switch)

async def menu3(cb: types.CallbackQuery,state: FSMContext):
    await cb.message.answer(text=f"""–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ:
–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –æ–ø–ª–∞—Ç–∞ 500 —Ä—É–±. 
–í –æ–ø–ª–∞—Ç—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∏—Ç:
    –ê—Ä–µ–Ω–¥–∞ –µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Ö–æ—Å—Ç–∏–Ω–≥–∞
    –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ 99.9% upload –±–æ—Ç–∞
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ

    """, reply_markup=switch_back, parse_mode='HTML')


async def menu4(cb: types.CallbackQuery,state: FSMContext):
    #await cb.bot.send_message('–ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤')
    await cb.bot.send_document(chat_id=cb.message.chat.id,document='BQACAgIAAxkBAANhY11Rn4UGMVuoWUaNPS8XT71fU-8AAmMfAAKOS_FKoZU1NSlcKgABKgQ',caption = '–ó–¥–µ—Å—å —Ç–µ–∫—Å—Ç, –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É',reply_markup=types.ReplyKeyboardRemove())
    await cb.bot.send_document(chat_id=cb.message.chat.id,document='BQACAgIAAxkBAANjY11SC1egDmH6CGsJ-gMa4Llxq7gAAmgfAAKOS_FKelZcg3NAzcYqBA',caption = '–ó–¥–µ—Å—å —É–∂–µ –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç, –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞',reply_markup=switch_back)

"""{"message_id": 99, "from": {"id": 128719420, "is_bot": false, "first_name": "–°–µ—Ä–≥–µ–π", "last_name": "–°–æ—Ñ—Ç", "username": "ScrojeeMagdak", "language_code": "ru"}, "chat": {"id": 128719420, "first_name": "–°–µ—Ä–≥–µ–π", "last_name": "–°–æ—Ñ—Ç", "username": "ScrojeeMagdak", "type": "private"}, "date": 1667085435, "document": {"file_name": "–ü—Ä–∏–º–µ—Ä PDF.pdf", "mime_type": "application/pdf", "thumb": {"file_id": "AAMCAgADGQEAA2NjXVILV6AOYfoIawn6AxrguXGruAACaB8AAo5L8Up6VlyDc0DNxgEAB20AAyoE", "file_unique_id": "AQADaB8AAo5L8Upy", "file_size": 8851, "width": 226, "height": 320}, "file_id": "BQACAgIAAxkBAANjY11SC1egDmH6CGsJ-gMa4Llxq7gAAmgfAAKOS_FKelZcg3NAzcYqBA", "file_unique_id": "AgADaB8AAo5L8Uo", "file_size": 6870151}}"""




async def menu5(cb: types.CallbackQuery,state: FSMContext):
    switch_keyboard = types.InlineKeyboardMarkup()
    switch_keyboard.add(types.InlineKeyboardButton(
        text='–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫‚òéÔ∏è',
        callback_data='menu6'
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data='menuback'
    ))

    await cb.message.answer(text="""–ö–æ–Ω—Ç–∞–∫—Ç—ã:
<b>–ü–æ –≤—Å–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –≤–æ–ø—Ä–æ—Å–∞–º, –ø–∏—à–∏—Ç–µ –∏ –∑–≤–æ–Ω–∏—Ç–µ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∏–∂–µ:
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –æ—Ç–¥–µ–ª:</b> 
‚òéÔ∏è 8-923-273-xxxx 
<b>–£—Å–ª–æ–≤–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞/–ê–±–æ–Ω–µ–Ω—Ç—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ:</b>
‚òéÔ∏è 8-960-766-xxxx
<b>–ó–∞—è–≤–∫–∏ –Ω–∞ —Ä–µ–º–æ–Ω—Ç/–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:</b>
‚òéÔ∏è 8-923-344-xxxx
    """, reply_markup=switch_keyboard,parse_mode='HTML')


async def menu6(cb: types.CallbackQuery,state: FSMContext):
    markup_request = ReplyKeyboardMarkup(resize_keyboard=True).add(
        KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è', request_contact=True)
    )
    await cb.message.answer(text="""–ß—Ç–æ–±—ã –º—ã –≤–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–ª–∏, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è" –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞""", reply_markup=markup_request)

    await cb.message.answer(text = '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é:', reply_markup=switch_back)


async def menu7(cb: types.CallbackQuery,state: FSMContext):
    #markup_request = ReplyKeyboardMarkup(resize_keyboard=True).add(
    #    KeyboardButton('–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã', url='https://yandex.ru/maps/-/CCUBZYqg-C')
   # )

    switch_keyboard = types.InlineKeyboardMarkup()
    switch_keyboard.add(types.InlineKeyboardButton(
        text="–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ãüìå",
        url='https://yandex.ru/maps/-/CCUZ7RSBxA'
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text="2gisüìå",
        url='https://go.2gis.com/arbjfy'
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text="Google mapüìå",
        url='https://g.page/moscowcityru?share'
    ))
    switch_keyboard.add(types.InlineKeyboardButton(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data='menuback'
    ))

    await cb.message.answer(text="""–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –¥–µ–ª–æ–≤–æ–π —Ü–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤–∞-–°–∏—Ç–∏""", reply_markup=switch_keyboard)


async def menuback(cb: types.CallbackQuery,state: FSMContext):
    await menu(cb.message,state)

async def sendContact(message: types.Message, state: FSMContext):
    await message.send_copy(CHAT_ID)


async def loadPhoto(message: types.Message, state: FSMContext):
    print(message)
async def loadDoc(message: types.Message, state: FSMContext):
    print(message)


def register_handlers_handler(dp: Dispatcher):
    pass
    dp.register_message_handler(menu, commands="start", state='*')
    dp.register_message_handler(menu, commands="menu", state='*')
    dp.register_message_handler(sendContact,  state='*', content_types='contact')
    #dp.register_message_handler(loadPhoto,  state='*', content_types='document')
    dp.register_message_handler(loadPhoto,  state='*', content_types='photo')
    dp.register_message_handler(loadDoc,  state='*', content_types='file')
    #dp.register_message_handler(test,state='*')
    dp.register_callback_query_handler(menu1, lambda c: c.data.find('menu1') != -1, state='*')
    dp.register_callback_query_handler(menu2, lambda c: c.data.find('menu2') != -1, state='*')
    dp.register_callback_query_handler(menu3, lambda c: c.data.find('menu3') != -1, state='*')
    dp.register_callback_query_handler(menu4, lambda c: c.data.find('menu4') != -1, state='*')

    dp.register_callback_query_handler(menu5, lambda c: c.data.find('menu5') != -1, state='*')
    dp.register_callback_query_handler(menu6, lambda c: c.data.find('menu6') != -1, state='*')
    dp.register_callback_query_handler(menu7, lambda c: c.data.find('menu7') != -1, state='*')
    dp.register_callback_query_handler(menuback, lambda c: c.data.find('menuback') != -1, state='*')



